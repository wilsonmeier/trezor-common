syntax = "proto2";

// Sugar for easier handling in Java
option java_package = "com.satoshilabs.trezor.lib.protobuf";
option java_outer_classname = "TrezorMessageRipple";

/**
 * Request: Public key at the specified index
 * @next RipplePublicKey
 */
message RippleGetPublicKey {
	repeated uint32 address_n = 1;			// BIP-32 path. For compatibility with other wallets, must be m/44'/144'/index'
	optional bool show_display = 2;			// optionally show on display before sending the result
}

/**
 * Response: Public key for the given index
 * @prev RippleGetPublicKey
 */
message RipplePublicKey {
	optional bytes public_key = 1;	// Raw bytes of the public key (no version or checksum)
}

/**
 * Request: Address at the specified index
 * @next RippleAddress
 */
message RippleGetAddress {
	repeated uint32 address_n = 1;			// BIP-32 path. For compatibility with other wallets, must be m/44'/144'/index'
	optional bool show_display = 2;			// optionally show on display before sending the result
}

/**
 * Response: Address for the given index
 * @prev RippleGetAddress
 */
message RippleAddress {
	optional string address = 1;	// Address in Ripple format (base58 of a pubkey with checksum)
}

/**
 * Request: ask device to sign Ripple transaction
 * @next RippleTxTypeRequest
 */
message RippleSignTx {
	repeated uint32 address_n = 1;				// BIP-32 path. For compatibility with other wallets, must be m/44'/144'/index'
	optional string account = 2;				// source account address
	optional uint32 fee = 3;					// fee (in drops) for the transaction
	optional uint32 flags = 4;					// fee (in drops) for the transaction
	optional uint32 sequence = 5;				// transaction sequence number
}

/**
 * Response: device is ready for client to send the transaction type
 * @prev StellarSignTx
 * @next RipplePaymentTxType
 */
message RippleTxTypeRequest {
}

/**
* Response: device is ready for client to send the transaction type
* @prev RippleTxTypeRequest
* @next RippleSignedTx
*/
message RipplePaymentTxType {
	optional uint32 amount = 1;				// only XRP is supported at the moment so this an integer
	optional string destination = 2;		// destination account address
	// other optional fields are not supported
}

/**
 * Response: signature for transaction
 * @prev RipplePaymentTxType
 */
message RippleSignedTx {
	optional bytes signature = 1;
	optional bytes serialized_tx = 2;
}
